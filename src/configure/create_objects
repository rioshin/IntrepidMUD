###########################################################################
#
# IntrepidMUD configuration script
# Copyright 2012-2019 by Mikael Segercrantz, Dan Griffiths and Dave Etheridge
# 
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the license, or (at your option)
# any later version.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
# 
# You should have received a copy of the GNU General Public License along 
# with this program. If not, see <http://www.gnu.org/licenses/>.
#
###########################################################################

INTREPID_VERSION=`egrep "\#define INTREPID_VERSION" include/mudconfig.h | cut -d"\"" -f2`

clear

cat <<*END*

 IntrepidMUD v$INTREPID_VERSION configuration
---------------------------------------------------------------------------

 DEPENDENCIES AND MAKEFILE OBJECTS

 This configuration script will now calculate the Makefile dependencies
 (which files should be recompiled when others are modified) and the
 Makefile objects (which files are required for the different executables)
 for your MUD.

*END*

#
# Makefile objects

sleep 1
echo "    Working out Makefile objects"
sleep 1

cat > .Makefile_Objects <<*END*
#
# IntrepidMUD Makefile Objects
#
#   Automatically generated by "make depend"
#   DO NOT EDIT!
#
*END*

rm -f .tmp

line="     "
count=0
count_angel=`ls -l angel/*.c | wc -l | awk '{ print $1 }'`
count_archangel=`ls -l archangel/*.c | wc -l | awk '{ print $1 }'`
count_common=`ls -l common/*.c | wc -l | awk '{ print $1 }'`
count_dns=`ls -l dns/*.c | wc -l | awk '{ print $1 }'`
count_ident=`ls -l ident/*.c | wc -l | awk '{ print $1 }'`
count_intermud=`ls -l intermud/*.c | wc -l | awk '{ print $1 }'`
count_mud=`ls -l mud/*.c | wc -l | awk '{ print $1 }'`
count=$(($count+$count_angel))
count=$(($count+$count_archangel))
count=$(($count+$count_common))
count=$(($count+$count_dns))
count=$(($count+$count_ident))
count=$(($count+$count_intermud))
count=$(($count+$count_mud))
count_orig=$count
while [ "$count" != "0" ]
do
  line="${line}."
  count=`expr $count - 1`
done
pcdone="     "
echo -e "$line\r\c"
count=$count_orig

# Common files
ls common/*.c | while read id
do
  echo "$id" >> .tmp
  pcdone="$pcdone##"
  echo -e "$pcdone\r\c"
done
sort .tmp > .tmp-common
rm .tmp

# Angel files
ls angel/*.c | while read id
do
  echo "$id" >> .tmp
  pcdone="$pcdone##"
  echo -e "$pcdone\r\c"
done
sort .tmp > .tmp-angel
rm .tmp

# Archangel files
ls archangel/*.c | while read id
do
  echo "$id" >> .tmp
  pcdone="$pcdone##"
  echo -e "$pcdone\r\c"
done
sort .tmp > .tmp-archangel
rm .tmp

# DNS files
ls dns/*.c | while read id
do
  echo "$id" >> .tmp
  pcdone="$pcdone##"
  echo -e "$pcdone\r\c"
done
sort .tmp > .tmp-dns
rm .tmp

# Ident files
ls ident/*.c | while read id
do
  echo "$id" >> .tmp
  pcdone="$pcdone##"
  echo -e "$pcdone\r\c"
done
sort .tmp > .tmp-ident
rm .tmp

# InterMUD files
ls intermud/*.c | while read id
do
  echo "$id" >> .tmp
  pcdone="$pcdone##"
  echo -e "$pcdone\r\c"
done
sort .tmp > .tmp-intermud
rm .tmp

# IntrepidMUD files
ls mud/*.c | while read id
do
  echo "$id" >> .tmp
  pcdone="$pcdone##"
  echo -e "$pcdone\r\c"
done
sort .tmp > .tmp-intrepid
rm .tmp

flag=0
echo "" >> .Makefile_Objects
cat .tmp-intrepid | while read id
do
  if [ "$flag" = "0" ]
  then
    echo -n "MUD_OBJECTS            = " >> .Makefile_Objects
    flag=1
  else
    echo -n "			  " >> .Makefile_Objects
  fi
  echo "\$(OBJ_LOCATION)/`echo $id | cut -d"." -f1`.o \\" >> .Makefile_Objects
done
rm .tmp-intrepid

flag=0
echo "" >> .Makefile_Objects
cat .tmp-common | while read id
do
  if [ "$flag" = "0" ]
  then
    echo -n "COMMON_OBJECTS         = " >> .Makefile_Objects
    flag=1
  else
    echo -n "			  " >> .Makefile_Objects
  fi
  echo "\$(OBJ_LOCATION)/`echo $id | cut -d"." -f1`.o \\" >> .Makefile_Objects
done
rm .tmp-common

flag=0
echo "" >> .Makefile_Objects
cat .tmp-angel | while read id
do
  if [ "$flag" = "0" ]
  then
    echo -n "ANGEL_OBJECTS          = " >> .Makefile_Objects
    flag=1
  else
    echo -n "			  " >> .Makefile_Objects
  fi
  echo "\$(OBJ_LOCATION)/`echo $id | cut -d"." -f1`.o \\" >> .Makefile_Objects
done
rm .tmp-angel

flag=0
echo "" >> .Makefile_Objects
cat .tmp-archangel | while read id
do
  if [ "$flag" = "0" ]
  then
    echo -n "ARCHANGEL_OBJECTS      = " >> .Makefile_Objects
    flag=1
  else
    echo -n "			  " >> .Makefile_Objects
  fi
  echo "\$(OBJ_LOCATION)/`echo $id | cut -d"." -f1`.o \\" >> .Makefile_Objects
done
rm .tmp-archangel

flag=0
echo "" >> .Makefile_Objects
cat .tmp-dns | while read id
do
  if [ "$flag" = "0" ]
  then
    echo -n "DNS_OBJECTS            = " >> .Makefile_Objects
    flag=1
  else
    echo -n "			  " >> .Makefile_Objects
  fi
  echo "\$(OBJ_LOCATION)/`echo $id | cut -d"." -f1`.o \\" >> .Makefile_Objects
done
rm .tmp-dns

flag=0
echo "" >> .Makefile_Objects
cat .tmp-ident | while read id
do
  if [ "$flag" = "0" ]
  then
    echo -n "IDENT_OBJECTS          = " >> .Makefile_Objects
    flag=1
  else
    echo -n "			  " >> .Makefile_Objects
  fi
  echo "\$(OBJ_LOCATION)/`echo $id | cut -d"." -f1`.o \\" >> .Makefile_Objects
done
rm .tmp-ident

flag=0
echo "" >> .Makefile_Objects
cat .tmp-intermud | while read id
do
  if [ "$flag" = "0" ]
  then
    echo -n "INTERMUD_OBJECTS       = " >> .Makefile_Objects
    flag=1
  else
    echo -n "			  " >> .Makefile_Objects
  fi
  echo "\$(OBJ_LOCATION)/`echo $id | cut -d"." -f1`.o \\" >> .Makefile_Objects
done
rm .tmp-intermud

sleep 1
echo -e "\n\n"
echo "    Working out dependencies"
echo -e "$line\r\c"
sleep 1

cat > .Makefile_Depends <<*END*
#
# IntrepidMUD Makefile Depends
#
#   Automatically generated by "make depend"
#   DO NOT EDIT!
#
*END*

rm -f .rawdep .rawdep-mud .rawdep-common .rawdep-angel .rawdep-archangel
rm -f .rawdep-dns .rawdep-ident .rawdep-intermud
count=$count_orig
pcdone="     "
echo " " >> .Makefile_Depends
echo "# Dependencies for the mud server itself" >> .Makefile_Depends
ls mud/*.c | while read id
do
  gcc -M $1 $id >> .rawdep-mud 2>/dev/null
  pcdone="${pcdone}##"
  echo -e "$pcdone\r\c"
done
sed -e '1,$s/^[a-z]/$(MUD_OBJ)\/&/' .rawdep-mud >> .Makefile_Depends
echo " " >> .Makefile_Depends
echo "# Dependencies for the common library" >> .Makefile_Depends
ls common/*.c | while read id
do
  gcc -M $1 $id >> .rawdep-common 2>/dev/null
  pcdone="${pcdone}##"
  echo -e "$pcdone\r\c"
done
sed -e '1,$s/^[a-z]/$(COMMON_OBJ)\/&/' .rawdep-common >> .Makefile_Depends
echo " " >> .Makefile_Depends
echo "# Dependencies for the guardian angel" >> .Makefile_Depends
ls angel/*.c | while read id
do
  gcc -M $1 $id >> .rawdep-angel 2>/dev/null
  pcdone="${pcdone}##"
  echo -e "$pcdone\r\c"
done
sed -e '1,$s/^[a-z]/$(ANGEL_OBJ)\/&/' .rawdep-angel >> .Makefile_Depends
echo " " >> .Makefile_Depends
echo "# Dependencies for the guardian archangel" >> .Makefile_Depends
ls archangel/*.c | while read id
do
  gcc -M $1 $id >> .rawdep-archangel 2>/dev/null
  pcdone="${pcdone}##"
  echo -e "$pcdone\r\c"
done
sed -e '1,$s/^[a-z]/$(ARCHANGEL_OBJ)\/&/' .rawdep-archangel >> .Makefile_Depends
echo " " >> .Makefile_Depends
echo "# Dependencies for the name resolution client" >> .Makefile_Depends
ls dns/*.c | while read id
do
  gcc -M $1 $id >> .rawdep-dns 2>/dev/null
  pcdone="${pcdone}##"
  echo -e "$pcdone\r\c"
done
sed -e '1,$s/^[a-z]/$(DNS_OBJ)\/&/' .rawdep-dns >> .Makefile_Depends
echo " " >> .Makefile_Depends
echo "# Dependencies for the ident resolution client" >> .Makefile_Depends
ls ident/*.c | while read id
do
  gcc -M $1 $id >> .rawdep-ident 2>/dev/null
  pcdone="${pcdone}##"
  echo -e "$pcdone\r\c"
done
sed -e '1,$s/^[a-z]/$(IDENT_OBJ)\/&/' .rawdep-ident >> .Makefile_Depends
echo " " >> .Makefile_Depends
echo "# Dependencies for the intermud server" >> .Makefile_Depends
ls intermud/*.c | while read id
do
  gcc -M $1 $id >> .rawdep-intermud 2>/dev/null
  pcdone="${pcdone}##"
  echo -e "$pcdone\r\c"
done
sed -e '1,$s/^[a-z]/$(INTERMUD_OBJ)\/&/' .rawdep-intermud >> .Makefile_Depends
rm -f .rawdep .rawdep-mud .rawdep-common .rawdep-angel .rawdep-archangel
rm -f .rawdep-dns .rawdep-ident .rawdep-intermud

sleep 1

echo -e "\n\n"
echo
echo "    Makefile objects and dependencies created"
echo
echo -n "    Press RETURN or ENTER to continue... "
read response

clear

make install
